(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    102147,       2223]
NotebookOptionsPosition[     49016,       1241]
NotebookOutlinePosition[     95324,       2095]
CellTagsIndexPosition[     95281,       2092]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Coefficients", "Subsubsection",
 CellChangeTimes->{{3.875963928525341*^9, 
  3.8759639357248917`*^9}},ExpressionUUID->"a4ac5100-5fdf-4c56-98ea-\
808a11071d8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"WarmEpsCoeff", "[", 
   RowBox[{
   "freq", ",", "nXmin", ",", "6.", ",", "nz", ",", "etaList", ",", "TList"}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.875390548524027*^9, 3.87539056951479*^9}, {
  3.875390623380945*^9, 3.875390648027767*^9}, {3.8753907456713247`*^9, 
  3.875390757861479*^9}, {3.875392447530272*^9, 3.87539244871635*^9}},
 CellLabel->
  "In[2897]:=",ExpressionUUID->"5cce0d66-1268-4aa9-8ed7-f97411dc0895"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.1204535074998765`", ",", "1.1204535074998765`", ",", 
     "0.7002722082743416`", ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.22472422502302297`", " ", "\[ImaginaryI]"}]}], ",", "0", ",",
      "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "0.00020924394672585737`"}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.0000938632204672625`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00010928926958687087`"}], ",", 
     RowBox[{"-", "0.0010502849273588213`"}], ",", "0.0004718929230079999`", 
     ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00040744133501524236`", " ", "\[ImaginaryI]"}]}], ",", "0", 
     ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875390572584312*^9, {3.875390639698723*^9, 3.87539064935166*^9}, 
   3.875390759037848*^9, 3.8753916213533373`*^9, 3.875392421921322*^9, 
   3.8753924553808727`*^9, {3.875962609415387*^9, 3.875962637063532*^9}, {
   3.8759627111830606`*^9, 3.875962719238645*^9}, 3.875962867890626*^9, 
   3.8759630876275682`*^9, 3.876062345780219*^9, 3.876062403158142*^9, 
   3.87606292090246*^9, 3.876063542669981*^9, 3.876063632160789*^9, 
   3.8761754851519117`*^9, 3.876175686041045*^9, 3.876179168339388*^9},
 CellLabel->
  "Out[2897]=",ExpressionUUID->"41fe1056-1a8c-4718-8954-0145253860a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"WarmEpsHCoeff", "[", 
   RowBox[{
   "freq", ",", "nXmin", ",", "6.", ",", "nz", ",", "etaList", ",", "TList"}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.875390876685302*^9, {3.8753924665499496`*^9, 3.875392467258156*^9}},
 CellLabel->
  "In[2898]:=",ExpressionUUID->"7cb27343-4e69-434d-9cb6-4c7c9aa70796"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.1204535074998765`", ",", "1.1204535074998765`", ",", 
     "0.7002722082743416`", ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.22472422502302297`", " ", "\[ImaginaryI]"}]}], ",", "0", ",",
      "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "0.00020924394672585737`"}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.0000938632204672625`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.00010928926958687087`"}], ",", 
     RowBox[{"-", "0.0010502849273588213`"}], ",", "0.0004718929230079999`", 
     ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.00040744133501524236`", " ", "\[ImaginaryI]"}]}], ",", "0", 
     ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875390878751645*^9, 3.875390961586041*^9, 3.875391166612638*^9, 
   3.875391644395274*^9, 3.875391944375988*^9, 3.875391994714662*^9, 
   3.875392183990036*^9, 3.875392257757822*^9, 3.875392403332944*^9, 
   3.875392473240129*^9, {3.875962609501219*^9, 3.875962637118044*^9}, 
   3.8759627193156757`*^9, 3.875962867946925*^9, 3.875963087685134*^9, 
   3.876062345838697*^9, 3.876062403194644*^9, 3.876062920950494*^9, 
   3.876063542703849*^9, 3.876063632200889*^9, 3.8761754851858463`*^9, 
   3.87617569386674*^9, 3.876179168378998*^9},
 CellLabel->
  "Out[2898]=",ExpressionUUID->"8e3f2319-ada7-409c-b957-df5e97920a13"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["k", "x"], " ", "roots"}]], "Subsubsection",
 CellChangeTimes->{{3.8759639573509283`*^9, 
  3.875964001145195*^9}},ExpressionUUID->"0fbe3997-b05d-4f52-8f63-\
598b9e89946e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDis6", "[", 
  RowBox[{
  "freq", ",", "nXmin", ",", "3.1", ",", "nz", ",", "etaList", ",", "TList"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.875392762191723*^9, 3.8753927657497473`*^9}, 
   3.875392802127981*^9, {3.875964132876861*^9, 3.875964157742874*^9}, {
   3.876062544471415*^9, 3.876062571225205*^9}, {3.8760637492481947`*^9, 
   3.8760637749876432`*^9}},
 CellLabel->
  "In[2899]:=",ExpressionUUID->"5b93d8ab-5d27-46f7-9743-9059b68de2af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.6847457875920061`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0036411950355235787`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.2942318677588374`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.10153321850116657`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"14.395868297900837`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.6310608763584815`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.6847457875920061`"}], "-", 
    RowBox[{"0.0036411950355235787`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.2942318677588374`"}], "-", 
    RowBox[{"0.10153321850116657`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "14.395868297900837`"}], "+", 
    RowBox[{"1.6310608763584815`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.875392767980342*^9, 3.87539280491073*^9, {3.875962609513538*^9, 
   3.87596263712875*^9}, 3.875962719375586*^9, 3.875962867956201*^9, 
   3.875963087693967*^9, 3.876062345881158*^9, 3.876062403206554*^9, 
   3.876062549502614*^9, 3.876062581819296*^9, 3.876062920983341*^9, 
   3.8760635427122498`*^9, 3.876063632229607*^9, 3.876063760964723*^9, 
   3.87606386651891*^9, 3.876175485200841*^9, 3.876175699671413*^9, 
   3.8761791683873997`*^9},
 CellLabel->
  "Out[2899]=",ExpressionUUID->"bee425c9-796b-4e52-8d32-fed2a3d713b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDisH6", "[", 
  RowBox[{
  "freq", ",", "nXmin", ",", "3.1", ",", "nz", ",", "etaList", ",", "TList"}],
   "]"}]], "Input",
 CellChangeTimes->{
  3.8753928373359833`*^9, {3.8760625581902323`*^9, 3.8760625742146387`*^9}, {
   3.876063752513681*^9, 3.8760637790283947`*^9}},
 CellLabel->
  "In[2900]:=",ExpressionUUID->"07f2b40b-7360-47a3-b94e-6004492b69bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6882657488284366`", ",", "1.4450590213480856`", ",", 
   "12.393719297818235`", ",", 
   RowBox[{"-", "0.6882657488284366`"}], ",", 
   RowBox[{"-", "1.4450590213480856`"}], ",", 
   RowBox[{"-", "12.393719297818235`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875392839823193*^9, {3.875962609548203*^9, 3.875962637153467*^9}, 
   3.8759627194096603`*^9, 3.87596286799179*^9, 3.875963087724262*^9, 
   3.8760623458921547`*^9, 3.8760624032284193`*^9, {3.8760625602552977`*^9, 
   3.876062575549037*^9}, 3.876062920994258*^9, 3.876063542731497*^9, 
   3.876063632240725*^9, {3.876063754519423*^9, 3.87606378041029*^9}, 
   3.876175485211738*^9, 3.8761757091585217`*^9, 3.876179168406508*^9},
 CellLabel->
  "Out[2900]=",ExpressionUUID->"fffaa714-77fc-4073-b45e-12c9a2f2f215"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDis6", "[", 
  RowBox[{
  "freq", ",", "nXmin", ",", "3.2", ",", "nz", ",", "etaList", ",", "TList"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.875392762191723*^9, 3.8753927657497473`*^9}, 
   3.875392802127981*^9, {3.875964132876861*^9, 3.875964157742874*^9}, {
   3.876062544471415*^9, 3.876062571225205*^9}, {3.8760637492481947`*^9, 
   3.8760637749876432`*^9}, 3.876063839607676*^9},
 CellLabel->
  "In[2901]:=",ExpressionUUID->"d90b4989-9298-4073-adc3-c5d52cd2b34e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.6869608726676576`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.003974810533660604`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.2540123074304481`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.10056689202537426`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"15.95661776989391`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.975945875623761`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.6869608726676576`"}], "-", 
    RowBox[{"0.003974810533660604`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.2540123074304481`"}], "-", 
    RowBox[{"0.10056689202537426`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "15.95661776989391`"}], "+", 
    RowBox[{"1.975945875623761`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.875392767980342*^9, 3.87539280491073*^9, {3.875962609513538*^9, 
   3.87596263712875*^9}, 3.875962719375586*^9, 3.875962867956201*^9, 
   3.875963087693967*^9, 3.876062345881158*^9, 3.876062403206554*^9, 
   3.876062549502614*^9, 3.876062581819296*^9, 3.876062920983341*^9, 
   3.8760635427122498`*^9, 3.876063632229607*^9, 3.876063760964723*^9, 
   3.876063846264587*^9, 3.876175485223764*^9, 3.876179168414065*^9},
 CellLabel->
  "Out[2901]=",ExpressionUUID->"1445e5f0-00cf-4f5d-97e6-0e3f2a57b728"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDisH6", "[", 
  RowBox[{
  "freq", ",", "nXmin", ",", "3.2", ",", "nz", ",", "etaList", ",", "TList"}],
   "]"}]], "Input",
 CellChangeTimes->{
  3.8753928373359833`*^9, {3.8760625581902323`*^9, 3.8760625742146387`*^9}, {
   3.876063752513681*^9, 3.8760637790283947`*^9}, 3.876063843586851*^9},
 CellLabel->
  "In[2902]:=",ExpressionUUID->"8c078aa7-3559-4993-9eda-7cf41b3f7256"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"15.122336655263648`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.7189542176354372`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.7216448225764569`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"15.122336655263648`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.7189542176354372`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "0.7216448225764569`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875392839823193*^9, {3.875962609548203*^9, 3.875962637153467*^9}, 
   3.8759627194096603`*^9, 3.87596286799179*^9, 3.875963087724262*^9, 
   3.8760623458921547`*^9, 3.8760624032284193`*^9, {3.8760625602552977`*^9, 
   3.876062575549037*^9}, 3.876062920994258*^9, 3.876063542731497*^9, 
   3.876063632240725*^9, {3.876063754519423*^9, 3.87606378041029*^9}, 
   3.876063850801783*^9, 3.8761754852294273`*^9, 3.87617916843501*^9},
 CellLabel->
  "Out[2902]=",ExpressionUUID->"944e6701-c1c0-493d-bcd6-5a0da698813d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots6", "=", 
  RowBox[{"WarmDis6", "[", 
   RowBox[{
   "freq", ",", "nXmin", ",", "6.", ",", "nz", ",", "etaList", ",", "TList"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8753928734699383`*^9, 3.875392873704376*^9}, 
   3.8759641612999783`*^9},
 CellLabel->
  "In[2903]:=",ExpressionUUID->"9b010c8b-253b-46aa-abfd-62c274920afe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6944059166993175`", ",", "0.8952234114150601`", ",", 
   "101.31890185770717`", ",", 
   RowBox[{"-", "0.6944059166993175`"}], ",", 
   RowBox[{"-", "0.8952234114150601`"}], ",", 
   RowBox[{"-", "101.31890185770717`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875392875574175*^9, 3.8753929946564713`*^9, 3.875393170032566*^9, 
   3.875393237231304*^9, 3.8753933194877*^9, {3.87596260955945*^9, 
   3.8759626371647797`*^9}, 3.875962719462235*^9, 3.87596286800072*^9, 
   3.875963087733006*^9, 3.875964169680526*^9, 3.876062345923214*^9, 
   3.876062403240026*^9, 3.876062921002398*^9, 3.876063542739657*^9, 
   3.87606363226969*^9, 3.8761754852414093`*^9, 3.876179168444725*^9},
 CellLabel->
  "Out[2903]=",ExpressionUUID->"31e663c8-6072-47ce-8a25-2506bd440f53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots6H", "=", 
  RowBox[{"WarmDisH6", "[", 
   RowBox[{
   "freq", ",", "nXmin", ",", "6.", ",", "nz", ",", "etaList", ",", "TList"}],
    "]"}]}]], "Input",
 CellChangeTimes->{
  3.8753928931029243`*^9, {3.875393000750887*^9, 3.875393001087134*^9}, {
   3.875964176729141*^9, 3.8759641813031054`*^9}},
 CellLabel->
  "In[2904]:=",ExpressionUUID->"d87e88a9-8058-42d7-9bd5-c3fee14bb2a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.6944059166993175`", ",", "0.8952234114150601`", ",", 
   "101.31890185770717`", ",", 
   RowBox[{"-", "0.6944059166993175`"}], ",", 
   RowBox[{"-", "0.8952234114150601`"}], ",", 
   RowBox[{"-", "101.31890185770717`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875392894743256*^9, 3.8753930025210752`*^9, 3.875393178019655*^9, 
   3.875393244859331*^9, 3.8753933258831043`*^9, {3.875962609584114*^9, 
   3.875962637189279*^9}, 3.875962719493517*^9, 3.875962868034807*^9, 
   3.875963087767206*^9, 3.8759641831524*^9, 3.875964828558794*^9, 
   3.876062345931293*^9, 3.876062403261691*^9, 3.8760629210109386`*^9, 
   3.876063542760188*^9, 3.876063632277924*^9, 3.876175485247099*^9, 
   3.876179168466321*^9},
 CellLabel->
  "Out[2904]=",ExpressionUUID->"2e15e6ed-1eb2-4bf3-9287-08fe9117049b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots3", "=", 
  RowBox[{"WarmDis6", "[", 
   RowBox[{
   "freq", ",", "nXmin", ",", "3.2", ",", "nz", ",", "etaList", ",", 
    "TList"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8753928734699383`*^9, 3.875392873704376*^9}, 
   3.8759641612999783`*^9, {3.8761813520215*^9, 3.876181369000093*^9}},
 CellLabel->
  "In[3033]:=",ExpressionUUID->"88c8e079-f70e-4bdc-8274-80446453f247"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.6869655804933107`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.004455451904827942`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"1.2476030546976518`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.11106830094125707`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"14.31114267940242`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.9749216152398494`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.6869655804933107`"}], "-", 
    RowBox[{"0.004455451904827942`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.2476030546976518`"}], "-", 
    RowBox[{"0.11106830094125707`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "14.31114267940242`"}], "+", 
    RowBox[{"1.9749216152398494`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.875392875574175*^9, 3.8753929946564713`*^9, 3.875393170032566*^9, 
   3.875393237231304*^9, 3.8753933194877*^9, {3.87596260955945*^9, 
   3.8759626371647797`*^9}, 3.875962719462235*^9, 3.87596286800072*^9, 
   3.875963087733006*^9, 3.875964169680526*^9, 3.876062345923214*^9, 
   3.876062403240026*^9, 3.876062921002398*^9, 3.876063542739657*^9, 
   3.87606363226969*^9, 3.8761754852414093`*^9, 3.876179168444725*^9, 
   3.876181377201576*^9},
 CellLabel->
  "Out[3033]=",ExpressionUUID->"ace6a0ff-8c34-47f0-9cff-e7e80688b051"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots3H", "=", 
  RowBox[{"WarmDisH6", "[", 
   RowBox[{
   "freq", ",", "nXmin", ",", "3.2", ",", "nz", ",", "etaList", ",", 
    "TList"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8753928931029243`*^9, {3.875393000750887*^9, 3.875393001087134*^9}, {
   3.875964176729141*^9, 3.8759641813031054`*^9}, {3.876181357761423*^9, 
   3.876181374569715*^9}},
 CellLabel->
  "In[3034]:=",ExpressionUUID->"4d15d2a3-7dc8-4437-8887-d02eb2ee295f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"15.927199029002026`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.47119994734698584`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.7289650211456316`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"15.927199029002026`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.47119994734698584`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "0.7289650211456316`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.875392894743256*^9, 3.8753930025210752`*^9, 3.875393178019655*^9, 
   3.875393244859331*^9, 3.8753933258831043`*^9, {3.875962609584114*^9, 
   3.875962637189279*^9}, 3.875962719493517*^9, 3.875962868034807*^9, 
   3.875963087767206*^9, 3.8759641831524*^9, 3.875964828558794*^9, 
   3.876062345931293*^9, 3.876062403261691*^9, 3.8760629210109386`*^9, 
   3.876063542760188*^9, 3.876063632277924*^9, 3.876175485247099*^9, 
   3.876179168466321*^9, 3.8761813830764647`*^9},
 CellLabel->
  "Out[3034]=",ExpressionUUID->"2f78a9df-228d-4c37-b71c-826e1d7de919"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disperson tensor", "Subsubsection",
 CellChangeTimes->{{3.8759649489134083`*^9, 
  3.87596495841225*^9}},ExpressionUUID->"5a956103-14be-467b-a415-\
3cde153d4dfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmEps", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "6.", ",", "nz", ",", 
   RowBox[{"roots6", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.875965034369568*^9, 3.8759651223341293`*^9, {3.876180252509334*^9, 
   3.876180254303116*^9}, 3.8761809489097347`*^9, {3.876181125700584*^9, 
   3.876181127545742*^9}, {3.876181161493058*^9, 3.876181162474996*^9}},
 CellLabel->
  "In[3028]:=",ExpressionUUID->"c0d1efe6-9acf-4413-9e1f-f864511c872e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1204543104573752`", ",", "1.1198869154843758`", ",", 
   "0.7002887798712789`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.2245490173122669`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "0.00018186253796097717`"}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.00008150087333948193`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.875965037412043*^9, 3.8759651239427433`*^9, 3.876062345963965*^9, 
   3.8760624032729588`*^9, 3.876062921040629*^9, 3.876063542770917*^9, 
   3.8760636323087797`*^9, 3.8761754852644033`*^9, 3.8761756503492537`*^9, 
   3.8761760785526*^9, 3.876177267971695*^9, 3.876177435453528*^9, {
   3.876177980914052*^9, 3.876177997162465*^9}, 3.876179028096361*^9, 
   3.8761791271020317`*^9, {3.876179157105586*^9, 3.876179168473421*^9}, {
   3.876180244384213*^9, 3.8761802556817713`*^9}, 3.876180366358161*^9, 
   3.876180861696121*^9, 3.876180905130629*^9, 3.8761809499723063`*^9, 
   3.8761811286136913`*^9, 3.87618117436445*^9},
 CellLabel->
  "Out[3028]=",ExpressionUUID->"0c4033b0-35c9-4a0c-a88c-08ac9d3f0d36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmEpsH", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "6.", ",", "nz", ",", 
   RowBox[{"roots6", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.87596515000347*^9, {3.875965209030604*^9, 3.875965212442483*^9}, 
   3.875965332369362*^9, {3.876062757295635*^9, 3.8760627599006453`*^9}, {
   3.8761810303217983`*^9, 3.876181032344942*^9}, {3.876181167517933*^9, 
   3.876181169396781*^9}},
 CellLabel->
  "In[3027]:=",ExpressionUUID->"eec5ffa6-0dcd-4153-83d2-6ae85e5412c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1203995270521632`", ",", "1.1198323890151771`", ",", 
   "0.7002017729728381`", ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.22450660773180264`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "0.00018164435153218564`"}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0000817382189877408`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.875965151860484*^9, 3.875965213749593*^9, 3.87606234597501*^9, 
   3.8760624032945337`*^9, 3.876062708669795*^9, 3.8760627622661543`*^9, 
   3.876062921048359*^9, 3.87606354278796*^9, 3.876063632316863*^9, 
   3.876175485271138*^9, {3.876179160719902*^9, 3.87617916848877*^9}, {
   3.8761810336731462`*^9, 3.8761810607318783`*^9}, 3.8761811703200703`*^9},
 CellLabel->
  "Out[3027]=",ExpressionUUID->"937d0d7e-785b-48f6-a860-12af81956ba2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmEps", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "3.1", ",", "nz", ",", 
   RowBox[{"roots6", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.875965034369568*^9, 3.8759651223341293`*^9, {3.876062640120697*^9, 
   3.876062640810546*^9}},
 CellLabel->
  "In[2907]:=",ExpressionUUID->"eb4906df-c17e-4046-b916-eef877f20acd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2.263050723482899`"}], "+", 
    RowBox[{"3.1572447153384964`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.2510117553308766`"}], "+", 
    RowBox[{"3.1444249205288113`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.7029505325429014`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.0069564086567323186`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"3.150834817933654`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.1047758652820763`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.045781883058455944`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.1483498376642148`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.1483498376642148`"}], "+", 
    RowBox[{"0.046125666422747215`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.875965037412043*^9, 3.8759651239427433`*^9, 
  3.876062345963965*^9, 3.8760624032729588`*^9, 3.876062654483327*^9, 
  3.8760629210590553`*^9, 3.876063542796403*^9, 3.876063632347636*^9, 
  3.876175485291164*^9, 3.876179168496142*^9},
 CellLabel->
  "Out[2907]=",ExpressionUUID->"f46a27d2-6084-4f0e-8d13-b4aaea74cbdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmEpsH", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "3.1", ",", "nz", ",", 
   RowBox[{"roots6", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.87596515000347*^9, {3.875965209030604*^9, 3.875965212442483*^9}, 
   3.875965332369362*^9, {3.876062650004088*^9, 3.8760626507819347`*^9}, {
   3.8760627703689528`*^9, 3.876062773538245*^9}},
 CellLabel->
  "In[2908]:=",ExpressionUUID->"7cf7bccb-34e8-4fd9-942f-be4b2253c613"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2.2563539848730887`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "2.2443489223207185`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.7029140942131283`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"3.098071794389088`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.047205175544194934`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.047548998714149124`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.875965151860484*^9, 3.875965213749593*^9, 
  3.87606234597501*^9, 3.8760624032945337`*^9, 3.876062661242118*^9, 
  3.876062775009399*^9, 3.876062921067564*^9, 3.876063542816326*^9, 
  3.876063632359536*^9, 3.876175485298139*^9, 3.876179168510964*^9},
 CellLabel->
  "Out[2908]=",ExpressionUUID->"5ed25fb6-0e83-4814-add1-75415d33f9d5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dispersion function evaluation", "Subsubsection",
 CellChangeTimes->{{3.875964008500142*^9, 
  3.875964022237135*^9}},ExpressionUUID->"a3c1fcdb-ce64-43db-b8a5-\
3e49ee2ca904"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "6.", ",", "nz", ",", 
   RowBox[{"roots6", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.87596385335408*^9, {3.8759639124761457`*^9, 3.875963913261405*^9}, {
   3.87596420849527*^9, 3.8759642118370667`*^9}},
 CellLabel->
  "In[3029]:=",ExpressionUUID->"cf5bb715-e609-467b-9692-7c0d8e030fbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.1783374130962875`*^-10"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.875963854916206*^9, 3.8759642137073517`*^9, 
  3.875964364319556*^9, 3.876062346008789*^9, 3.876062403305667*^9, 
  3.876062921102724*^9, 3.87606354282479*^9, 3.8760636323872433`*^9, 
  3.876175485317466*^9, 3.876179168521598*^9, 3.876181201568222*^9},
 CellLabel->
  "Out[3029]=",ExpressionUUID->"6c42c8dd-af3b-465f-a484-3c02a0f5a1ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmHDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "6.", ",", "nz", ",", 
   RowBox[{"roots6H", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.875964404950968*^9, {3.875964667132864*^9, 3.875964688214799*^9}, 
   3.875965345247231*^9},
 CellLabel->
  "In[3030]:=",ExpressionUUID->"0cd5b41c-3b8b-4ca1-ae15-a64ece68d6b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.8852414811507902`*^-10"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.875964406806487*^9, 3.875964549863921*^9, 
  3.875964689752738*^9, 3.875964837283452*^9, 3.8759653472295713`*^9, 
  3.8760623460167027`*^9, 3.876062403326976*^9, 3.876062921113245*^9, 
  3.876063542843666*^9, 3.8760636323951893`*^9, 3.876175485326619*^9, 
  3.8761791685364923`*^9, 3.876181208042632*^9},
 CellLabel->
  "Out[3030]=",ExpressionUUID->"36842dc0-d87d-4de6-968e-eb16add97224"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "3.2", ",", "nz", ",", 
   RowBox[{"roots3", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.87596385335408*^9, {3.8759639124761457`*^9, 3.875963913261405*^9}, {
   3.87596420849527*^9, 3.8759642118370667`*^9}, {3.876181232690556*^9, 
   3.8761812333993797`*^9}, 3.87618142589121*^9},
 CellLabel->
  "In[3035]:=",ExpressionUUID->"82ba0271-b436-434d-88b7-3a0207661c3a"],

Cell[BoxData[
 RowBox[{"1.0687082688891396`*^-21", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.875963854916206*^9, 3.8759642137073517`*^9, 
  3.875964364319556*^9, 3.876062346008789*^9, 3.876062403305667*^9, 
  3.876062921102724*^9, 3.87606354282479*^9, 3.8760636323872433`*^9, 
  3.876175485317466*^9, 3.876179168521598*^9, 3.876181201568222*^9, 
  3.876181244049943*^9, 3.87618143352028*^9},
 CellLabel->
  "Out[3035]=",ExpressionUUID->"206d63fd-aa0d-49df-8b34-a709cccb1df3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmHDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "3.2", ",", "nz", ",", 
   RowBox[{"roots3H", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.875964404950968*^9, {3.875964667132864*^9, 3.875964688214799*^9}, 
   3.875965345247231*^9, {3.876181239331196*^9, 3.8761812400831223`*^9}, {
   3.876181429247219*^9, 3.876181430257595*^9}},
 CellLabel->
  "In[3036]:=",ExpressionUUID->"98044f12-3fb1-4158-9a4f-cae775133c7f"],

Cell[BoxData[
 RowBox[{"0.013039202744166757`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.875964406806487*^9, 3.875964549863921*^9, 
  3.875964689752738*^9, 3.875964837283452*^9, 3.8759653472295713`*^9, 
  3.8760623460167027`*^9, 3.876062403326976*^9, 3.876062921113245*^9, 
  3.876063542843666*^9, 3.8760636323951893`*^9, 3.876175485326619*^9, 
  3.8761791685364923`*^9, 3.876181208042632*^9, 3.876181250058797*^9, 
  3.876181439887788*^9},
 CellLabel->
  "Out[3036]=",ExpressionUUID->"5bcd8103-448a-444f-9874-ebfb4a04ef11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Change B so not a root .  ", "Subsection",
 CellChangeTimes->{{3.875965377907147*^9, 3.875965417398357*^9}, {
  3.876176317442864*^9, 
  3.876176338776231*^9}},ExpressionUUID->"c0ef276e-e75b-43dc-bec1-\
3364de15d52d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "6.1", ",", "nz", ",", 
   RowBox[{"roots6", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.87596385335408*^9, {3.8759639124761457`*^9, 3.875963913261405*^9}, {
   3.87596420849527*^9, 3.8759642118370667`*^9}, {3.875965423528222*^9, 
   3.875965423696576*^9}, 3.8759654566230087`*^9},
 CellLabel->
  "In[2911]:=",ExpressionUUID->"fda8cadd-70e0-42df-85ef-81dbcb9c36da"],

Cell[BoxData[
 RowBox[{"2.8657329122154455`*^-10", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.875963854916206*^9, 3.8759642137073517`*^9, 3.875964364319556*^9, {
   3.875965430645245*^9, 3.8759654580734158`*^9}, 3.876062346062531*^9, 
   3.876062403359313*^9, 3.876062921129466*^9, 3.8760635428711042`*^9, 
   3.8760636324339657`*^9, 3.876175485355595*^9, 3.876179168544503*^9},
 CellLabel->
  "Out[2911]=",ExpressionUUID->"05dd92f8-89e5-4a56-827e-91b7343cdea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmHDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "6.1", ",", "nz", ",", 
   RowBox[{"roots6H", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.875964404950968*^9, {3.875964667132864*^9, 3.875964688214799*^9}, 
   3.875965345247231*^9, {3.875965427181129*^9, 3.8759654274197617`*^9}, 
   3.875965464455463*^9, 3.876181499016151*^9},
 CellLabel->
  "In[2912]:=",ExpressionUUID->"de48114d-3dc3-4065-b66f-279bed03fa07"],

Cell[BoxData[
 RowBox[{"2.1710195439525862`*^-10", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.875964406806487*^9, 3.875964549863921*^9, 3.875964689752738*^9, 
   3.875964837283452*^9, 3.8759653472295713`*^9, {3.875965436939375*^9, 
   3.8759654655976954`*^9}, 3.876062346094255*^9, 3.876062403370306*^9, 
   3.876062921162253*^9, 3.876063542879277*^9, 3.876063632464239*^9, 
   3.87617548537197*^9, 3.876179168558138*^9},
 CellLabel->
  "Out[2912]=",ExpressionUUID->"0c3fb3ea-68c4-4f08-8068-78a3cbf417b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "3.2151", ",", "nz", ",", 
   RowBox[{"roots3", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.87596385335408*^9, {3.8759639124761457`*^9, 3.875963913261405*^9}, {
   3.87596420849527*^9, 3.8759642118370667`*^9}, {3.875965423528222*^9, 
   3.875965423696576*^9}, 3.8759654566230087`*^9, 3.876062906356896*^9, 
   3.876062949265473*^9, {3.876063474953965*^9, 3.876063475899631*^9}, 
   3.8761815115596943`*^9},
 CellLabel->
  "In[3037]:=",ExpressionUUID->"04765cf7-4a23-4491-80b7-c704ce4b2c5f"],

Cell[BoxData[
 RowBox[{"1.3494701911698928`*^-9", "+", 
  RowBox[{"8.237822011423503`*^-9", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.875963854916206*^9, 3.8759642137073517`*^9, 3.875964364319556*^9, {
   3.875965430645245*^9, 3.8759654580734158`*^9}, 3.876062346062531*^9, 
   3.876062403359313*^9, {3.876062921169944*^9, 3.876062950347588*^9}, 
   3.8760634020768003`*^9, 3.876063478948194*^9, 3.8760635428987083`*^9, 
   3.876063632475561*^9, 3.87617548538269*^9, 3.876179168565311*^9, 
   3.876181517111123*^9},
 CellLabel->
  "Out[3037]=",ExpressionUUID->"e40c7361-8026-47c5-a9e2-6d4dc30fcde4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WarmHDisFunc", "[", 
  RowBox[{"freq", ",", "nXmin", ",", "3.2151", ",", "nz", ",", 
   RowBox[{"roots3H", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "etaList", ",", "TList"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.875964404950968*^9, {3.875964667132864*^9, 3.875964688214799*^9}, 
   3.875965345247231*^9, {3.875965427181129*^9, 3.8759654274197617`*^9}, 
   3.875965464455463*^9, 3.8760629103717537`*^9, 3.876062957779632*^9, {
   3.8760634841377573`*^9, 3.87606348526628*^9}, 3.87618151515304*^9},
 CellLabel->
  "In[3038]:=",ExpressionUUID->"2644cc24-2999-424a-bb09-fe514de5ba13"],

Cell[BoxData[
 RowBox[{"0.2466365200998375`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.875964406806487*^9, 3.875964549863921*^9, 3.875964689752738*^9, 
   3.875964837283452*^9, 3.8759653472295713`*^9, {3.875965436939375*^9, 
   3.8759654655976954`*^9}, 3.876062346094255*^9, 3.876062403370306*^9, 
   3.87606292118069*^9, 3.8760629586157923`*^9, 3.876063412443213*^9, 
   3.876063487274625*^9, 3.876063542906829*^9, 3.876063632503231*^9, 
   3.876175485399579*^9, 3.87617916858012*^9, 3.876181523444009*^9},
 CellLabel->
  "Out[3038]=",ExpressionUUID->"926b9925-9110-4896-adf7-c64440bdd8e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geometric Parameters", "Section",
 Evaluatable->False,
 AspectRatioFixed->
  False,ExpressionUUID->"9f3d7dc9-9bc7-4df9-aa78-074d2c5635b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xProfileMin", "=", 
   RowBox[{"-", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xProfileMax", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nXmin", "=", 
   RowBox[{".3", "  ", 
    SuperscriptBox["10", "20"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nXmax", "=", 
   RowBox[{"1.7", "  ", 
    SuperscriptBox["10", "20"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BXmin", "=", "3.2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BXmax", "=", "3.2"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"N", ".", "B", ".", " ", "For"}], " ", "Linear", " ", "slab", " ",
     "model", " ", "Te", " ", "Xmin", " ", "and", " ", "Te", " ", "Xmax", " ",
     "are", " ", "defined", " ", 
    RowBox[{"here", ".", "  ", "TList"}], " ", "below", " ", "gives", " ", 
    "the", " ", "ratio", " ", "of", " ", "various", " ", "Ti", " ", "to", " ",
     "Te"}], "  ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TXmin", "=", "2.5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TXmax", "=", "2.5"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.785632095968069*^9, 3.785632096808028*^9}, {
   3.785715124621912*^9, 3.785715127880719*^9}, {3.785715187258295*^9, 
   3.785715255436153*^9}, {3.785715402014634*^9, 3.785715402360586*^9}, {
   3.785715973449636*^9, 3.785716011469452*^9}, {3.785716838970649*^9, 
   3.785716841289342*^9}, {3.785718180998004*^9, 3.785718186913554*^9}, {
   3.786022654605584*^9, 3.786022680914832*^9}, {3.786022755578272*^9, 
   3.786022758436451*^9}, {3.786022974792736*^9, 3.786022986785119*^9}, {
   3.7860256954740143`*^9, 3.78602574185332*^9}, {3.78602578133704*^9, 
   3.786025892316128*^9}, {3.786898849142356*^9, 3.786898863780991*^9}, {
   3.786898961281838*^9, 3.7868989682782*^9}, {3.786899048005848*^9, 
   3.786899241709957*^9}, {3.786899471417465*^9, 3.786899483072441*^9}, {
   3.8442908083110332`*^9, 3.844290816844331*^9}, 3.844290849363801*^9, {
   3.844291563929158*^9, 3.844291572054595*^9}, {3.844291605120183*^9, 
   3.844291612447547*^9}, {3.844292041754281*^9, 3.8442920443037653`*^9}, {
   3.844292106071944*^9, 3.8442921235943117`*^9}, {3.844292278463813*^9, 
   3.844292293507122*^9}, {3.844292385341641*^9, 3.844292408081634*^9}, {
   3.8442924480843477`*^9, 3.8442924709891*^9}, {3.846946424744924*^9, 
   3.846946425737645*^9}, {3.846946509529862*^9, 3.8469465098357897`*^9}, {
   3.8469467323613873`*^9, 3.84694674012307*^9}, {3.846947753254078*^9, 
   3.846947756162375*^9}, 3.846948559774394*^9, {3.846948667127696*^9, 
   3.8469486712434273`*^9}, {3.846949222391988*^9, 3.846949233683024*^9}, 
   3.846952176772997*^9, {3.876062320282214*^9, 3.876062327536763*^9}, {
   3.876062393087452*^9, 3.8760623962819977`*^9}, {3.876063527935072*^9, 
   3.87606353218258*^9}},
 AspectRatioFixed->False,
 CellLabel->
  "In[2917]:=",ExpressionUUID->"c5a17d6c-1dbf-4631-8174-48f2eba650ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RF Parameters", "Section",ExpressionUUID->"967211d9-b815-47cc-bdde-7ea26df9af2b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"freq", "=", 
   RowBox[{"90", "*", 
    SuperscriptBox["10", "3"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"2.9979", " ", 
    SuperscriptBox["10", "8"]}]}], ";"}], "\n", 
 RowBox[{"k0", "=", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"N", "[", "\[Pi]", "]"}], " ", "freq", " ", 
    SuperscriptBox["10", "6"]}], "c"]}], "\n", 
 RowBox[{
  RowBox[{"nz", "  ", "=", "0.55"}], ";"}], "\n", 
 RowBox[{"kz", "=", " ", 
  RowBox[{"nz", " ", "*", " ", "k0"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.78571527592765*^9, 3.7857152840683317`*^9}, 
   3.785715450350713*^9, {3.785717790649518*^9, 3.7857177913467216`*^9}, {
   3.78571822319055*^9, 3.785718223506558*^9}, 3.7857182696512136`*^9, 
   3.7857184209148703`*^9, 3.7857216316274357`*^9, {3.786022700286766*^9, 
   3.7860227206336946`*^9}, {3.8442829920904913`*^9, 3.844283038221135*^9}, {
   3.844283089912624*^9, 3.8442830911187067`*^9}, 3.8445226496468887`*^9, {
   3.844522872802051*^9, 3.8445228753288107`*^9}, {3.844523050474062*^9, 
   3.8445230885952473`*^9}, 3.8445233310298853`*^9, 3.844523433363649*^9, {
   3.844523464019825*^9, 3.844523472512061*^9}, {3.846163632722658*^9, 
   3.846163633269177*^9}, 3.846169312377302*^9, 3.84651528523002*^9, 
   3.846515549906196*^9, {3.846946432371236*^9, 3.846946438567747*^9}, 
   3.846948811948408*^9, 3.846948999284829*^9, 3.846949035725037*^9, 
   3.8469490761148663`*^9, 3.846949106920206*^9, 3.846949137604718*^9, {
   3.846950219185396*^9, 3.846950219658949*^9}, {3.846951799658202*^9, 
   3.846951802042684*^9}, 3.846951855243733*^9, 3.847023622503886*^9, 
   3.847199656103956*^9, {3.847308990759759*^9, 3.847308990928211*^9}},
 CellLabel->
  "In[2925]:=",ExpressionUUID->"23503287-608a-4c9b-98ff-c3d195aa8bd5"],

Cell[BoxData["1886.2759853436164`"], "Output",
 CellChangeTimes->{
  3.844522651165779*^9, 3.8445228763674498`*^9, 3.844523093909684*^9, 
   3.8445233321380568`*^9, 3.844523440686866*^9, 3.844523475117634*^9, 
   3.846163635606895*^9, 3.846169313855077*^9, 3.846514030658236*^9, 
   3.846515288671308*^9, 3.846515573315105*^9, 3.846515698700716*^9, 
   3.846946778042849*^9, 3.8469488135950613`*^9, 3.8469490006576967`*^9, 
   3.846949037171238*^9, {3.846949078514413*^9, 3.846949108313265*^9}, 
   3.846949139209528*^9, 3.84695022573834*^9, 3.846951856564705*^9, 
   3.84702362412956*^9, 3.847199658374283*^9, 3.8759627048276863`*^9, 
   3.8760623461336117`*^9, 3.876062403398028*^9, 3.876062921219162*^9, 
   3.876063542961542*^9, 3.8760636325781612`*^9, 3.876175485442185*^9, 
   3.876179168619536*^9},
 CellLabel->
  "Out[2927]=",ExpressionUUID->"5651765b-b867-4c21-abaa-6ad353ced437"],

Cell[BoxData["1037.4517919389891`"], "Output",
 CellChangeTimes->{
  3.844522651165779*^9, 3.8445228763674498`*^9, 3.844523093909684*^9, 
   3.8445233321380568`*^9, 3.844523440686866*^9, 3.844523475117634*^9, 
   3.846163635606895*^9, 3.846169313855077*^9, 3.846514030658236*^9, 
   3.846515288671308*^9, 3.846515573315105*^9, 3.846515698700716*^9, 
   3.846946778042849*^9, 3.8469488135950613`*^9, 3.8469490006576967`*^9, 
   3.846949037171238*^9, {3.846949078514413*^9, 3.846949108313265*^9}, 
   3.846949139209528*^9, 3.84695022573834*^9, 3.846951856564705*^9, 
   3.84702362412956*^9, 3.847199658374283*^9, 3.8759627048276863`*^9, 
   3.8760623461336117`*^9, 3.876062403398028*^9, 3.876062921219162*^9, 
   3.876063542961542*^9, 3.8760636325781612`*^9, 3.876175485442185*^9, 
   3.8761791686208687`*^9},
 CellLabel->
  "Out[2929]=",ExpressionUUID->"3be72cd7-0070-482f-9579-4f4ae5bc0002"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plasma Parameters", "Section",
 Evaluatable->False,
 AspectRatioFixed->
  True,ExpressionUUID->"9e66ace4-9290-4af7-9514-83d586edc489"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"etaList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "etaList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
     "0."}], ";", 
    RowBox[{
     RowBox[{
     "etaList", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
     "1.0"}], ";", 
    RowBox[{
     RowBox[{
     "etaList", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
     "0."}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "etaList", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
     "0."}], ";", 
    RowBox[{
     RowBox[{
     "etaList", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "=", 
     "0."}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"N", ".", "B", ".", " ", "For"}], " ", "Linear", " ", "slab", 
     " ", "model", " ", "Te", " ", "Xmin", " ", "and", " ", "Te", " ", "Xmax",
      " ", "are", " ", "defined", " ", 
     RowBox[{"above", ".", "  ", "TList"}], " ", "here", " ", "gives", " ", 
     "the", " ", "ratio", " ", "of", " ", "various", " ", "Ti", " ", "to", 
     " ", "Te", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", 
        RowBox[{"TList", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], " ", "=", " ", 
       RowBox[{"1.0", " ", "always"}]}], ")"}]}], "  ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "=", 
     RowBox[{"1.0", "*", "TXmin"}]}], ";", 
    RowBox[{
     RowBox[{"TList", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "=", 
     RowBox[{"1.0", "*", "TXmin"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TList", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     "=", 
     RowBox[{"1.0", "*", "TXmin"}]}], " ", ";", 
    RowBox[{
     RowBox[{"TList", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
     "=", "0."}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TList", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
     "=", "0."}], ";", 
    RowBox[{
     RowBox[{"TList", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
     "=", "0."}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"modelList", " ", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"modelList", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", " ", 
    RowBox[{
     RowBox[{"modelList", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "=", "1"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"modelList", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "=", "0"}], ";", " ", 
    RowBox[{
     RowBox[{"modelList", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"modelList", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "=", "0"}], ";", " ", 
    RowBox[{
     RowBox[{"modelList", "[", 
      RowBox[{"[", "6", "]"}], "]"}], "=", "0"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"nminList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "nminList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
     
     RowBox[{"-", "1"}]}], ";", 
    RowBox[{
     RowBox[{
     "nminList", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
     
     RowBox[{"-", "2"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "nminList", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
     
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{
     RowBox[{
     "nminList", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
     
     RowBox[{"-", "2"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "nminList", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "=", 
     
     RowBox[{"-", "2"}]}], ";", 
    RowBox[{
     RowBox[{
     "nminList", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], "=", 
     
     RowBox[{"-", "2"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"nmaxList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0.", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "nmaxList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
     "1"}], ";", 
    RowBox[{
     RowBox[{
     "nmaxList", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
     "2"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "nmaxList", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
     "2"}], ";", 
    RowBox[{
     RowBox[{
     "nmaxList", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
     "2"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
     "nmaxList", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "=", 
     "2"}], ";", 
    RowBox[{
     RowBox[{
     "nmaxList", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], "=", 
     "2"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.78563213043392*^9, 3.785632196968782*^9}, {
  3.7857153027630653`*^9, 3.7857153061920223`*^9}, {3.786899032711438*^9, 
  3.786899041122429*^9}, {3.786899253746863*^9, 3.7868993291615133`*^9}, {
  3.786899461699667*^9, 3.786899500246706*^9}, {3.787100962935794*^9, 
  3.787100969191757*^9}, {3.787101409543212*^9, 3.7871014137233467`*^9}, {
  3.787103642700481*^9, 3.787103646161292*^9}, {3.844630160519287*^9, 
  3.844630163963179*^9}, {3.876063617057394*^9, 3.876063622650517*^9}, {
  3.87618064407828*^9, 3.876180653991564*^9}, {3.876180716340094*^9, 
  3.876180727079217*^9}, {3.876180763675375*^9, 3.8761807697477818`*^9}, {
  3.876180809343692*^9, 3.876180839581946*^9}},
 AspectRatioFixed->True,
 CellLabel->
  "In[2998]:=",ExpressionUUID->"8567a9ad-d208-4ab7-8dcc-4f6e263680ca"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.787100970786837*^9, 3.787101415024652*^9, 3.787101607304633*^9, 
   3.7871018037040586`*^9, 3.8442917242186947`*^9, 3.844517420032044*^9, 
   3.844630172156741*^9, 3.846515698709969*^9, 3.846946778058779*^9, 
   3.875962704837996*^9, 3.876062346146397*^9, 3.876062403422812*^9, 
   3.876062921231531*^9, 3.876063542985743*^9, {3.876063625073372*^9, 
   3.876063632590744*^9}, {3.876175475007927*^9, 3.876175485451799*^9}, 
   3.876178933579341*^9, 3.876179168627941*^9, 3.876180728840747*^9, 
   3.876180770867035*^9, 3.87618084160819*^9},
 CellLabel->
  "Out[3006]=",ExpressionUUID->"5d0acd31-00db-4103-a6eb-939839008903"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Parameters", "Section",
 Evaluatable->False,
 AspectRatioFixed->
  True,ExpressionUUID->"8f2aa4ef-30f1-47ac-8ec5-705f50deffce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataSet", "=", "\"\<Slab 90HHz\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmin", "=", "xProfileMin"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xmax", "=", "xProfileMax"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nPoints", "=", "201"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7856322433167677`*^9, 3.785632251240247*^9}, {
   3.785715328799574*^9, 3.785715333684813*^9}, {3.785716980683919*^9, 
   3.785716987593305*^9}, {3.78602300208703*^9, 3.786023045474801*^9}, 
   3.786025911677721*^9, {3.844283201502315*^9, 3.8442832054410563`*^9}, {
   3.844291679037838*^9, 3.844291709796418*^9}, {3.8444454109930067`*^9, 
   3.844445419918741*^9}, {3.846515336705668*^9, 3.846515337122849*^9}, {
   3.84694646614714*^9, 3.846946476185746*^9}, 3.8469468493469687`*^9},
 AspectRatioFixed->True,
 CellLabel->
  "In[2949]:=",ExpressionUUID->"58bc9e23-d48e-4f38-a6d7-0606f1669245"]
}, Open  ]]
},
WindowSize->{824, 655},
WindowMargins->{{5, Automatic}, {Automatic, 18}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3189c59f-2f23-4568-9780-2a81f1936d50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 165, 3, 56, "Subsubsection",ExpressionUUID->"a4ac5100-5fdf-4c56-98ea-808a11071d8e"],
Cell[CellGroupData[{
Cell[770, 29, 481, 10, 37, "Input",ExpressionUUID->"5cce0d66-1268-4aa9-8ed7-f97411dc0895"],
Cell[1254, 41, 1516, 33, 113, "Output",ExpressionUUID->"41fe1056-1a8c-4718-8954-0145253860a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2807, 79, 365, 9, 37, "Input",ExpressionUUID->"7cb27343-4e69-434d-9cb6-4c7c9aa70796"],
Cell[3175, 90, 1555, 34, 113, "Output",ExpressionUUID->"8e3f2319-ada7-409c-b957-df5e97920a13"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4779, 130, 211, 5, 56, "Subsubsection",ExpressionUUID->"0fbe3997-b05d-4f52-8f63-598b9e89946e"],
Cell[CellGroupData[{
Cell[5015, 139, 478, 10, 37, "Input",ExpressionUUID->"5b93d8ab-5d27-46f7-9743-9059b68de2af"],
Cell[5496, 151, 1378, 28, 87, "Output",ExpressionUUID->"bee425c9-796b-4e52-8d32-fed2a3d713b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6911, 184, 384, 9, 37, "Input",ExpressionUUID->"07f2b40b-7360-47a3-b94e-6004492b69bf"],
Cell[7298, 195, 822, 16, 60, "Output",ExpressionUUID->"fffaa714-77fc-4073-b45e-12c9a2f2f215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8157, 216, 500, 10, 37, "Input",ExpressionUUID->"d90b4989-9298-4073-adc3-c5d52cd2b34e"],
Cell[8660, 228, 1344, 27, 87, "Output",ExpressionUUID->"1445e5f0-00cf-4f5d-97e6-0e3f2a57b728"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10041, 260, 406, 9, 37, "Input",ExpressionUUID->"8c078aa7-3559-4993-9eda-7cf41b3f7256"],
Cell[10450, 271, 1112, 21, 87, "Output",ExpressionUUID->"944e6701-c1c0-493d-bcd6-5a0da698813d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11599, 297, 360, 9, 37, "Input",ExpressionUUID->"9b010c8b-253b-46aa-abfd-62c274920afe"],
Cell[11962, 308, 811, 16, 60, "Output",ExpressionUUID->"31e663c8-6072-47ce-8a25-2506bd440f53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12810, 329, 411, 10, 37, "Input",ExpressionUUID->"d87e88a9-8058-42d7-9bd5-c3fee14bb2a4"],
Cell[13224, 341, 840, 17, 60, "Output",ExpressionUUID->"2e15e6ed-1eb2-4bf3-9287-08fe9117049b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14101, 363, 406, 9, 37, "Input",ExpressionUUID->"88c8e079-f70e-4bdc-8274-80446453f247"],
Cell[14510, 374, 1374, 28, 87, "Output",ExpressionUUID->"ace6a0ff-8c34-47f0-9cff-e7e80688b051"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15921, 407, 463, 11, 37, "Input",ExpressionUUID->"4d15d2a3-7dc8-4437-8887-d02eb2ee295f"],
Cell[16387, 420, 1157, 22, 87, "Output",ExpressionUUID->"2f78a9df-228d-4c37-b71c-826e1d7de919"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17593, 448, 168, 3, 56, "Subsubsection",ExpressionUUID->"5a956103-14be-467b-a415-3cde153d4dfe"],
Cell[CellGroupData[{
Cell[17786, 455, 537, 11, 37, "Input",ExpressionUUID->"c0d1efe6-9acf-4413-9e1f-f864511c872e"],
Cell[18326, 468, 1156, 22, 87, "Output",ExpressionUUID->"0c4033b0-35c9-4a0c-a88c-08ac9d3f0d36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19519, 495, 565, 12, 37, "Input",ExpressionUUID->"eec5ffa6-0dcd-4153-83d2-6ae85e5412c8"],
Cell[20087, 509, 888, 18, 87, "Output",ExpressionUUID->"937d0d7e-785b-48f6-a860-12af81956ba2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21012, 532, 418, 10, 37, "Input",ExpressionUUID->"eb4906df-c17e-4046-b916-eef877f20acd"],
Cell[21433, 544, 1162, 24, 87, "Output",ExpressionUUID->"f46a27d2-6084-4f0e-8d13-b4aaea74cbdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22632, 573, 516, 11, 37, "Input",ExpressionUUID->"7cf7bccb-34e8-4fd9-942f-be4b2253c613"],
Cell[23151, 586, 1081, 23, 87, "Output",ExpressionUUID->"5ed25fb6-0e83-4814-add1-75415d33f9d5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24281, 615, 181, 3, 56, "Subsubsection",ExpressionUUID->"a3c1fcdb-ce64-43db-b8a5-3e49ee2ca904"],
Cell[CellGroupData[{
Cell[24487, 622, 445, 10, 37, "Input",ExpressionUUID->"cf5bb715-e609-467b-9692-7c0d8e030fbf"],
Cell[24935, 634, 486, 9, 61, "Output",ExpressionUUID->"6c42c8dd-af3b-465f-a484-3c02a0f5a1ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25458, 648, 421, 10, 37, "Input",ExpressionUUID->"0cd5b41c-3b8b-4ca1-ae15-a64ece68d6b9"],
Cell[25882, 660, 538, 10, 61, "Output",ExpressionUUID->"36842dc0-d87d-4de6-968e-eb16add97224"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26457, 675, 519, 11, 37, "Input",ExpressionUUID->"82ba0271-b436-434d-88b7-3a0207661c3a"],
Cell[26979, 688, 514, 9, 61, "Output",ExpressionUUID->"206d63fd-aa0d-49df-8b34-a709cccb1df3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27530, 702, 520, 11, 37, "Input",ExpressionUUID->"98044f12-3fb1-4158-9a4f-cae775133c7f"],
Cell[28053, 715, 584, 10, 60, "Output",ExpressionUUID->"5bcd8103-448a-444f-9874-ebfb4a04ef11"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28686, 731, 223, 4, 67, "Subsection",ExpressionUUID->"c0ef276e-e75b-43dc-bec1-3364de15d52d"],
Cell[CellGroupData[{
Cell[28934, 739, 520, 11, 37, "Input",ExpressionUUID->"fda8cadd-70e0-42df-85ef-81dbcb9c36da"],
Cell[29457, 752, 503, 9, 61, "Output",ExpressionUUID->"05dd92f8-89e5-4a56-827e-91b7343cdea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29997, 766, 518, 11, 37, "Input",ExpressionUUID->"de48114d-3dc3-4065-b66f-279bed03fa07"],
Cell[30518, 779, 546, 10, 61, "Output",ExpressionUUID->"0c3fb3ea-68c4-4f08-8068-78a3cbf417b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31101, 794, 645, 13, 37, "Input",ExpressionUUID->"04765cf7-4a23-4491-80b7-c704ce4b2c5f"],
Cell[31749, 809, 618, 11, 61, "Output",ExpressionUUID->"e40c7361-8026-47c5-a9e2-6d4dc30fcde4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32404, 825, 617, 12, 37, "Input",ExpressionUUID->"2644cc24-2999-424a-bb09-fe514de5ba13"],
Cell[33024, 839, 654, 11, 60, "Output",ExpressionUUID->"926b9925-9110-4896-adf7-c64440bdd8e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33727, 856, 144, 3, 84, "Section",ExpressionUUID->"9f3d7dc9-9bc7-4df9-aa78-074d2c5635b8",
 Evaluatable->False],
Cell[33874, 861, 2929, 57, 298, "Input",ExpressionUUID->"c5a17d6c-1dbf-4631-8174-48f2eba650ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36840, 923, 87, 0, 84, "Section",ExpressionUUID->"967211d9-b815-47cc-bdde-7ea26df9af2b"],
Cell[CellGroupData[{
Cell[36952, 927, 1784, 35, 199, "Input",ExpressionUUID->"23503287-608a-4c9b-98ff-c3d195aa8bd5"],
Cell[38739, 964, 889, 14, 60, "Output",ExpressionUUID->"5651765b-b867-4c21-abaa-6ad353ced437"],
Cell[39631, 980, 891, 14, 60, "Output",ExpressionUUID->"3be72cd7-0070-482f-9579-4f4ae5bc0002"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40571, 1000, 140, 3, 84, "Section",ExpressionUUID->"9e66ace4-9290-4af7-9514-83d586edc489",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[40736, 1007, 6472, 188, 760, "Input",ExpressionUUID->"8567a9ad-d208-4ab7-8dcc-4f6e263680ca",
 InitializationCell->True],
Cell[47211, 1197, 676, 11, 60, "Output",ExpressionUUID->"5d0acd31-00db-4103-a6eb-939839008903"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47936, 1214, 138, 3, 84, "Section",ExpressionUUID->"8f2aa4ef-30f1-47ac-8ec5-705f50deffce",
 Evaluatable->False],
Cell[48077, 1219, 923, 19, 136, "Input",ExpressionUUID->"58bc9e23-d48e-4f38-a6d7-0606f1669245",
 InitializationCell->True]
}, Open  ]]
}
]
*)

